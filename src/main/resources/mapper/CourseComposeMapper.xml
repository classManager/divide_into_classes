<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.baidu.dao.CourseComposeMapper" >
  <resultMap id="BaseResultMap" type="com.baidu.domain.CourseCompose" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="composeId" property="composeid" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="course1Id" property="course1id" jdbcType="VARCHAR" />
    <result column="course2Id" property="course2id" jdbcType="VARCHAR" />
    <result column="course3Id" property="course3id" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="createDate" property="createdate" jdbcType="BIGINT" />
    <result column="lastModifier" property="lastmodifier" jdbcType="VARCHAR" />
    <result column="lastModDate" property="lastmoddate" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, composeId, name, course1Id, course2Id, course3Id, type, status, creator, createDate, 
    lastModifier, lastModDate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.baidu.domain.CourseComposeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from course_course_compose
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from course_course_compose
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from course_course_compose
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.baidu.domain.CourseCompose" >
    insert into course_course_compose (id, composeId, name, 
      course1Id, course2Id, course3Id, 
      type, status, creator, 
      createDate, lastModifier, lastModDate
      )
    values (#{id,jdbcType=BIGINT}, #{composeid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{course1id,jdbcType=VARCHAR}, #{course2id,jdbcType=VARCHAR}, #{course3id,jdbcType=VARCHAR}, 
      #{type,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, #{creator,jdbcType=VARCHAR}, 
      #{createdate,jdbcType=BIGINT}, #{lastmodifier,jdbcType=VARCHAR}, #{lastmoddate,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.baidu.domain.CourseCompose" >
    insert into course_course_compose
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="composeid != null" >
        composeId,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="course1id != null" >
        course1Id,
      </if>
      <if test="course2id != null" >
        course2Id,
      </if>
      <if test="course3id != null" >
        course3Id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="createdate != null" >
        createDate,
      </if>
      <if test="lastmodifier != null" >
        lastModifier,
      </if>
      <if test="lastmoddate != null" >
        lastModDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="composeid != null" >
        #{composeid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="course1id != null" >
        #{course1id,jdbcType=VARCHAR},
      </if>
      <if test="course2id != null" >
        #{course2id,jdbcType=VARCHAR},
      </if>
      <if test="course3id != null" >
        #{course3id,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=BIGINT},
      </if>
      <if test="lastmodifier != null" >
        #{lastmodifier,jdbcType=VARCHAR},
      </if>
      <if test="lastmoddate != null" >
        #{lastmoddate,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.baidu.domain.CourseComposeExample" resultType="java.lang.Integer" >
    select count(*) from course_course_compose
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update course_course_compose
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.composeid != null" >
        composeId = #{record.composeid,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.course1id != null" >
        course1Id = #{record.course1id,jdbcType=VARCHAR},
      </if>
      <if test="record.course2id != null" >
        course2Id = #{record.course2id,jdbcType=VARCHAR},
      </if>
      <if test="record.course3id != null" >
        course3Id = #{record.course3id,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.createdate != null" >
        createDate = #{record.createdate,jdbcType=BIGINT},
      </if>
      <if test="record.lastmodifier != null" >
        lastModifier = #{record.lastmodifier,jdbcType=VARCHAR},
      </if>
      <if test="record.lastmoddate != null" >
        lastModDate = #{record.lastmoddate,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update course_course_compose
    set id = #{record.id,jdbcType=BIGINT},
      composeId = #{record.composeid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      course1Id = #{record.course1id,jdbcType=VARCHAR},
      course2Id = #{record.course2id,jdbcType=VARCHAR},
      course3Id = #{record.course3id,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      creator = #{record.creator,jdbcType=VARCHAR},
      createDate = #{record.createdate,jdbcType=BIGINT},
      lastModifier = #{record.lastmodifier,jdbcType=VARCHAR},
      lastModDate = #{record.lastmoddate,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.baidu.domain.CourseCompose" >
    update course_course_compose
    <set >
      <if test="composeid != null" >
        composeId = #{composeid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="course1id != null" >
        course1Id = #{course1id,jdbcType=VARCHAR},
      </if>
      <if test="course2id != null" >
        course2Id = #{course2id,jdbcType=VARCHAR},
      </if>
      <if test="course3id != null" >
        course3Id = #{course3id,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        createDate = #{createdate,jdbcType=BIGINT},
      </if>
      <if test="lastmodifier != null" >
        lastModifier = #{lastmodifier,jdbcType=VARCHAR},
      </if>
      <if test="lastmoddate != null" >
        lastModDate = #{lastmoddate,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.baidu.domain.CourseCompose" >
    update course_course_compose
    set composeId = #{composeid,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      course1Id = #{course1id,jdbcType=VARCHAR},
      course2Id = #{course2id,jdbcType=VARCHAR},
      course3Id = #{course3id,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      creator = #{creator,jdbcType=VARCHAR},
      createDate = #{createdate,jdbcType=BIGINT},
      lastModifier = #{lastmodifier,jdbcType=VARCHAR},
      lastModDate = #{lastmoddate,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>