<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.baidu.dao.GradeInfoMapper" >
  <resultMap id="BaseResultMap" type="com.baidu.domain.GradeInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="tnId" property="tnid" jdbcType="INTEGER" />
    <result column="gradeCode" property="gradecode" jdbcType="INTEGER" />
    <result column="grade" property="grade" jdbcType="VARCHAR" />
    <result column="g_order" property="gOrder" jdbcType="INTEGER" />
    <result column="year" property="year" jdbcType="INTEGER" />
    <result column="classType" property="classtype" jdbcType="TINYINT" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, tnId, gradeCode, grade, g_order, year, classType, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.baidu.domain.GradeInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from saas_grade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from saas_grade
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from saas_grade
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.baidu.domain.GradeInfo" >
    insert into saas_grade (id, tnId, gradeCode, 
      grade, g_order, year, 
      classType, status)
    values (#{id,jdbcType=INTEGER}, #{tnid,jdbcType=INTEGER}, #{gradecode,jdbcType=INTEGER}, 
      #{grade,jdbcType=VARCHAR}, #{gOrder,jdbcType=INTEGER}, #{year,jdbcType=INTEGER}, 
      #{classtype,jdbcType=TINYINT}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.baidu.domain.GradeInfo" >
    insert into saas_grade
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="tnid != null" >
        tnId,
      </if>
      <if test="gradecode != null" >
        gradeCode,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="gOrder != null" >
        g_order,
      </if>
      <if test="year != null" >
        year,
      </if>
      <if test="classtype != null" >
        classType,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tnid != null" >
        #{tnid,jdbcType=INTEGER},
      </if>
      <if test="gradecode != null" >
        #{gradecode,jdbcType=INTEGER},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="gOrder != null" >
        #{gOrder,jdbcType=INTEGER},
      </if>
      <if test="year != null" >
        #{year,jdbcType=INTEGER},
      </if>
      <if test="classtype != null" >
        #{classtype,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.baidu.domain.GradeInfoExample" resultType="java.lang.Integer" >
    select count(*) from saas_grade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update saas_grade
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tnid != null" >
        tnId = #{record.tnid,jdbcType=INTEGER},
      </if>
      <if test="record.gradecode != null" >
        gradeCode = #{record.gradecode,jdbcType=INTEGER},
      </if>
      <if test="record.grade != null" >
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.gOrder != null" >
        g_order = #{record.gOrder,jdbcType=INTEGER},
      </if>
      <if test="record.year != null" >
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.classtype != null" >
        classType = #{record.classtype,jdbcType=TINYINT},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update saas_grade
    set id = #{record.id,jdbcType=INTEGER},
      tnId = #{record.tnid,jdbcType=INTEGER},
      gradeCode = #{record.gradecode,jdbcType=INTEGER},
      grade = #{record.grade,jdbcType=VARCHAR},
      g_order = #{record.gOrder,jdbcType=INTEGER},
      year = #{record.year,jdbcType=INTEGER},
      classType = #{record.classtype,jdbcType=TINYINT},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.baidu.domain.GradeInfo" >
    update saas_grade
    <set >
      <if test="tnid != null" >
        tnId = #{tnid,jdbcType=INTEGER},
      </if>
      <if test="gradecode != null" >
        gradeCode = #{gradecode,jdbcType=INTEGER},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="gOrder != null" >
        g_order = #{gOrder,jdbcType=INTEGER},
      </if>
      <if test="year != null" >
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="classtype != null" >
        classType = #{classtype,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.baidu.domain.GradeInfo" >
    update saas_grade
    set tnId = #{tnid,jdbcType=INTEGER},
      gradeCode = #{gradecode,jdbcType=INTEGER},
      grade = #{grade,jdbcType=VARCHAR},
      g_order = #{gOrder,jdbcType=INTEGER},
      year = #{year,jdbcType=INTEGER},
      classType = #{classtype,jdbcType=TINYINT},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>